name: e2e-test

on:
  workflow_call:
    inputs:
      runner-image-uri:
        type: string
        required: true
        description: Image URI of runner
      runner-ubuntu20-image-uri:
        type: string
        required: true
        description: Image URI of runner (ubuntu20)

jobs:
  controller:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      actions: write
    defaults:
      run:
        working-directory: e2e-test
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: aquaproj/aqua-installer@e2d0136abcf70b7a2f6f505720640750557c4b33 # v3.1.1
        with:
          aqua_version: v2.43.0
          working_directory: e2e-test
      - run: make cluster
      - run: make create-github-config-secret
        env:
          APP_ID: ${{ secrets.E2E_TEST_APP_ID }}
          APP_INSTALLATION_ID: ${{ secrets.E2E_TEST_APP_INSTALLATION_ID }}
          APP_PRIVATE_KEY: ${{ secrets.E2E_TEST_APP_PRIVATE_KEY }}
      - run: make deploy
        env:
          ARC_RUNNER_NAME: e2e-${{ github.run_id }}
          ARC_RUNNER_UBUNTU20_NAME: e2e-ubuntu20-${{ github.run_id }}
          ARC_RUNNER_IMAGE_URI: ${{ inputs.runner-image-uri }}
          ARC_RUNNER_UBUNTU20_IMAGE_URI: ${{ inputs.runner-ubuntu20-image-uri }}
      - run: make wait-for-listeners
        env:
          ARC_RUNNER_NAME: e2e-${{ github.run_id }}
          ARC_RUNNER_UBUNTU20_NAME: e2e-ubuntu20-${{ github.run_id }}

      - name: Run e2e-test-jobs by workflow_dispatch
        id: create-workflow-dispatch
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'main',
              workflow_id: 'reusable--e2e-test-jobs.yaml',
              inputs: {
                'runner-name': `e2e-${context.runId}`,
                'expected-image-os': 'ubuntu22',
              },
            })
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'main',
              workflow_id: 'reusable--e2e-test-jobs.yaml',
              inputs: {
                'runner-name': `e2e-ubuntu20-${context.runId}`,
                'expected-image-os': 'ubuntu20',
              },
            })
            const branch = await github.rest.repos.getBranch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
            })
            core.setOutput('sha', branch.data.commit.sha)
      - uses: int128/wait-for-workflows-action@0b600b397a0a1da304bec289e74fd19fe7c797ac # v1.29.0
        continue-on-error: true
        with:
          filter-workflow-names: e2e-test-jobs
          filter-workflow-events: workflow_dispatch
          fail-fast: false
          sha: ${{ steps.create-workflow-dispatch.outputs.sha }}

      - run: make runner-logs
        if: always()
      - run: make listener-logs
        if: always()
      - run: make undeploy
        if: always()
      - run: make controller-logs
        if: always()
