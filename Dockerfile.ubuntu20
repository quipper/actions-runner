FROM ghcr.io/actions/actions-runner:2.329.0@sha256:75599cd393958a52142f489a160123f5b9b21605a40609696deb13d49867d53f AS upstream

FROM mcr.microsoft.com/dotnet/runtime-deps:6.0-focal@sha256:939d4408b41d8cca7d749716842456a9618e2964c866d634a466810f873e0bfa

ARG TARGETOS
ARG TARGETARCH
ARG DOCKER_VERSION=24.0.6

# DO NOT ADD ANY PACKAGE!
# We'd like to keep this image small for long-term maintanability and security.
# If you want to install a package, use https://aquaproj.github.io in your workflow.

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update -y \
    && apt-get install -y --no-install-recommends \
        sudo \
        # Packages in actions-runner-controller/runner-22.04
        # https://github.com/actions/actions-runner-controller/pull/2050
        # https://github.com/actions/actions-runner-controller/blob/master/runner/actions-runner.ubuntu-22.04.dockerfile
        curl \
        git \
        jq \
        unzip \
        zip \
        # Packages in actions-runner-controller/runner-20.04
        build-essential \
        locales \
        tzdata \
        # ruby/setup-ruby dependencies
        # https://github.com/ruby/setup-ruby#using-self-hosted-runners
        libyaml-dev \
        # dockerd dependencies
        iptables \
    && rm -rf /var/lib/apt/lists/*

# Set up the runner environment,
# based on https://github.com/actions/runner/blob/v2.309.0/images/Dockerfile
RUN adduser --disabled-password --gecos "" --uid 1001 runner \
    && groupadd docker --gid 123 \
    && usermod -aG sudo runner \
    && usermod -aG docker runner \
    && echo "%sudo   ALL=(ALL:ALL) NOPASSWD:ALL" > /etc/sudoers \
    && echo "Defaults env_keep += \"DEBIAN_FRONTEND\"" >> /etc/sudoers

RUN export RUNNER_ARCH=${TARGETARCH} \
    && if [ "$RUNNER_ARCH" = "amd64" ]; then export DOCKER_ARCH=x86_64 ; fi \
    && if [ "$RUNNER_ARCH" = "arm64" ]; then export DOCKER_ARCH=aarch64 ; fi \
    && curl -fLo docker.tgz https://download.docker.com/${TARGETOS}/static/stable/${DOCKER_ARCH}/docker-${DOCKER_VERSION}.tgz \
    && tar zxvf docker.tgz \
    && rm -rf docker.tgz \
    && install -o root -g root -m 755 docker/* /usr/bin/ \
    && rm -rf docker

WORKDIR /home/runner
COPY --chown=runner:docker --from=upstream /home/runner .

# Some setup actions store cache into /opt/hostedtoolcache
ENV RUNNER_TOOL_CACHE=/opt/hostedtoolcache
RUN mkdir /opt/hostedtoolcache \
    && chown runner:docker /opt/hostedtoolcache

COPY entrypoint.sh /

VOLUME /var/lib/docker

# Some setup actions depend on ImageOS variable
# https://github.com/actions/runner-images/issues/345
ENV ImageOS=ubuntu20

# Align to GitHub-hosted runners (ubuntu-latest)
ENV LANG=C.UTF-8

USER runner
ENTRYPOINT ["/usr/bin/docker-init", "-v", "--", "/entrypoint.sh"]
CMD ["/home/runner/run.sh"]
